version: 2.1
aliases:
  - &flutter_environment
    - image: cirrusci/flutter:stable
  - &node_environment
    - image: circleci/node:16
  - &restore_cache
    keys:
      # when lock file changes, use increasingly general patterns to restore cache
      - pub-packages-v1-{{ checksum "packages/graphql/pubspec.yaml" }}-{{ checksum "packages/graphql_flutter/pubspec.yaml" }}
      - pub-packages-v1-{{ checksum "packages/graphql/pubspec.yaml" }}
      - pub-packages-v1-
  - &install_yaml_processor
    name: Install yq yaml processor
    command: |

      sudo apt update && \
      sudo apt install -y wget

      version="4.6.1"
      binary="yq_linux_amd64"
      source="https://github.com/mikefarah/yq/releases/download"

      wget "${source}/v${version}/${binary}" -O ~/yq
      sudo chmod +x ~/yq

      sudo apt remove -y wget
  - &setup_github_bot
    name: Setup Github bot
    command: |
      git config credential.helper 'cache --timeout=120'
      git config user.email "github-bot@zinoapp.com"
      git config user.name "Zino App (Github bot)"
  - &setup_pub_credentials
    name: Setup pub credentials
    command: |
      [[ ! -d ~/.pub-cache ]] && mkdir -p ~/.pub-cache

      cat \<<EOF > ~/.pub-cache/credentials.json
      {
        "accessToken": ${PUB_ACCESS_TOKEN},
        "refreshToken": ${PUB_REFRESH_TOKEN},
        "tokenEndpoint": "https://accounts.google.com/o/oauth2/token",
        "scopes": ["https://www.googleapis.com/auth/userinfo.email", "openid"],
        "expiration": ${PUB_EXPIRATION}
      }
      EOF
jobs:
  dependencies:
    docker: *flutter_environment
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_yaml_processor
      - run:
          name: Install dependencies (graphql)
          command: |
            cd packages/graphql
            pub get
      - run:
          name: Install dependencies (graphql_flutter)
          command: |
            cd packages/graphql_flutter
            flutter packages get
      - save_cache:
          key: pub-packages-v1-{{ checksum "packages/graphql/pubspec.yaml" }}-{{ checksum "packages/graphql_flutter/pubspec.yaml" }}
          paths:
            - ~/.pub-cache
  release:
    docker: *node_environment
    steps:
      - checkout
      - run:
          name: Generate release tags
          command: nvm install 'lts/*' && npx -p semantic-release -p @semantic-release/changelog -p @semantic-release/git semantic-release
  sync_with_beta:
    docker: *node_environment
    steps:
      - checkout
      - run: *setup_github_bot
      - run:
          name: Sync master into beta
          command: |
            git checkout master
            git pull origin master
            git checkout beta
            git merge master --no-commit
            git commit --allow-empty -m "ci(Semantic release): Sync master into beta [skip ci]"
            # Push quietly to prevent showing the token in log
            git push -q https://${GH_TOKEN}@github.com/zino-app/graphql-flutter.git beta
  publish:
    docker: *flutter_environment
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_yaml_processor
      - run: *setup_github_bot
      - run: *setup_pub_credentials
      - run:
          name: Patch pubspec versions
          command: |
            export VERSION=${CIRCLE_TAG#"v"}

            cd packages/graphql
            ~/yq -P -i eval '.version=env(VERSION)' pubspec.yaml

            cd ../graphql_flutter
            ~/yq -P -i  eval '.version=env(VERSION)' pubspec.yaml
      - run:
          name: Bump version numbers
          command: |
            if [[ $CIRCLE_TAG =~ ^.*beta.*$ ]]; then BRANCH=beta; else BRANCH=beta; fi
            git checkout $BRANCH

            git add packages/graphql/pubspec.yaml packages/graphql_flutter/pubspec.yaml
            git commit --allow-empty -m "build(Pub): Bump version numbers [skip ci]"

            # Push quietly to prevent showing the token in log
            git push -q https://${GH_TOKEN}@github.com/zino-app/graphql-flutter.git $BRANCH
      - run:
          name: Pub deployment (graphql)
          command: |
            cd packages/graphql
            pub publish -f
      - run:
          name: Pub deployment (graphql_flutter)
          command: |
            export VERSION=${CIRCLE_TAG#"v"}
            export GRAPHQL_DEP="^${VERSION}"

            cd packages/graphql_flutter
            ~/yq -P -i  eval '.dependencies.graphql=env(GRAPHQL_DEP) | del(.publish_to)' pubspec.yaml
            pub publish -f
workflows:
  default:
    jobs:
      - dependencies:
          filters:
            tags:
              only: /^.*$/
      - publish:
          requires:
            - dependencies
          filters:
            tags:
              only: /^.*$/
            branches:
              ignore: /.*/
